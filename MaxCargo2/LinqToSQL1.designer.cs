#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MaxCargo2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BDMaxCargo")]
	public partial class LinqToSQL1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertDocumento(Documento instance);
    partial void UpdateDocumento(Documento instance);
    partial void DeleteDocumento(Documento instance);
    partial void InsertEgreso(Egreso instance);
    partial void UpdateEgreso(Egreso instance);
    partial void DeleteEgreso(Egreso instance);
    partial void InsertIngreso(Ingreso instance);
    partial void UpdateIngreso(Ingreso instance);
    partial void DeleteIngreso(Ingreso instance);
    partial void InsertOtro(Otro instance);
    partial void UpdateOtro(Otro instance);
    partial void DeleteOtro(Otro instance);
    partial void InsertTrabajador(Trabajador instance);
    partial void UpdateTrabajador(Trabajador instance);
    partial void DeleteTrabajador(Trabajador instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertVehiculo(Vehiculo instance);
    partial void UpdateVehiculo(Vehiculo instance);
    partial void DeleteVehiculo(Vehiculo instance);
    #endregion
		
		public LinqToSQL1DataContext() : 
				base(global::MaxCargo2.Properties.Settings.Default.BDMaxCargoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQL1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQL1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQL1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQL1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Documento> Documento
		{
			get
			{
				return this.GetTable<Documento>();
			}
		}
		
		public System.Data.Linq.Table<Egreso> Egreso
		{
			get
			{
				return this.GetTable<Egreso>();
			}
		}
		
		public System.Data.Linq.Table<Ingreso> Ingreso
		{
			get
			{
				return this.GetTable<Ingreso>();
			}
		}
		
		public System.Data.Linq.Table<Otro> Otro
		{
			get
			{
				return this.GetTable<Otro>();
			}
		}
		
		public System.Data.Linq.Table<Trabajador> Trabajador
		{
			get
			{
				return this.GetTable<Trabajador>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Vehiculo> Vehiculo
		{
			get
			{
				return this.GetTable<Vehiculo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCliente;
		
		private string _Direccion;
		
		private string _Nombre;
		
		private string _Razon;
		
		private string _RUC;
		
		private System.Nullable<int> _IdDocu;
		
		private EntitySet<Ingreso> _Ingreso;
		
		private EntitySet<Usuario> _Usuario;
		
		private EntityRef<Documento> _Documento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdClienteChanging(int value);
    partial void OnIdClienteChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnRazonChanging(string value);
    partial void OnRazonChanged();
    partial void OnRUCChanging(string value);
    partial void OnRUCChanged();
    partial void OnIdDocuChanging(System.Nullable<int> value);
    partial void OnIdDocuChanged();
    #endregion
		
		public Cliente()
		{
			this._Ingreso = new EntitySet<Ingreso>(new Action<Ingreso>(this.attach_Ingreso), new Action<Ingreso>(this.detach_Ingreso));
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			this._Documento = default(EntityRef<Documento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(100)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Razon", DbType="VarChar(100)")]
		public string Razon
		{
			get
			{
				return this._Razon;
			}
			set
			{
				if ((this._Razon != value))
				{
					this.OnRazonChanging(value);
					this.SendPropertyChanging();
					this._Razon = value;
					this.SendPropertyChanged("Razon");
					this.OnRazonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RUC", DbType="VarChar(100)")]
		public string RUC
		{
			get
			{
				return this._RUC;
			}
			set
			{
				if ((this._RUC != value))
				{
					this.OnRUCChanging(value);
					this.SendPropertyChanging();
					this._RUC = value;
					this.SendPropertyChanged("RUC");
					this.OnRUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDocu", DbType="Int")]
		public System.Nullable<int> IdDocu
		{
			get
			{
				return this._IdDocu;
			}
			set
			{
				if ((this._IdDocu != value))
				{
					if (this._Documento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDocuChanging(value);
					this.SendPropertyChanging();
					this._IdDocu = value;
					this.SendPropertyChanged("IdDocu");
					this.OnIdDocuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Ingreso", Storage="_Ingreso", ThisKey="IdCliente", OtherKey="IdCliente")]
		public EntitySet<Ingreso> Ingreso
		{
			get
			{
				return this._Ingreso;
			}
			set
			{
				this._Ingreso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Usuario", Storage="_Usuario", ThisKey="IdCliente", OtherKey="IdCliente")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documento_Cliente", Storage="_Documento", ThisKey="IdDocu", OtherKey="IdDocu", IsForeignKey=true)]
		public Documento Documento
		{
			get
			{
				return this._Documento.Entity;
			}
			set
			{
				Documento previousValue = this._Documento.Entity;
				if (((previousValue != value) 
							|| (this._Documento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documento.Entity = null;
						previousValue.Cliente.Remove(this);
					}
					this._Documento.Entity = value;
					if ((value != null))
					{
						value.Cliente.Add(this);
						this._IdDocu = value.IdDocu;
					}
					else
					{
						this._IdDocu = default(Nullable<int>);
					}
					this.SendPropertyChanged("Documento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ingreso(Ingreso entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Ingreso(Ingreso entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Documento")]
	public partial class Documento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDocu;
		
		private string _TipoDoc;
		
		private string _NroDoc;
		
		private EntitySet<Cliente> _Cliente;
		
		private EntitySet<Egreso> _Egreso;
		
		private EntitySet<Ingreso> _Ingreso;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDocuChanging(int value);
    partial void OnIdDocuChanged();
    partial void OnTipoDocChanging(string value);
    partial void OnTipoDocChanged();
    partial void OnNroDocChanging(string value);
    partial void OnNroDocChanged();
    #endregion
		
		public Documento()
		{
			this._Cliente = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Cliente), new Action<Cliente>(this.detach_Cliente));
			this._Egreso = new EntitySet<Egreso>(new Action<Egreso>(this.attach_Egreso), new Action<Egreso>(this.detach_Egreso));
			this._Ingreso = new EntitySet<Ingreso>(new Action<Ingreso>(this.attach_Ingreso), new Action<Ingreso>(this.detach_Ingreso));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDocu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDocu
		{
			get
			{
				return this._IdDocu;
			}
			set
			{
				if ((this._IdDocu != value))
				{
					this.OnIdDocuChanging(value);
					this.SendPropertyChanging();
					this._IdDocu = value;
					this.SendPropertyChanged("IdDocu");
					this.OnIdDocuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoDoc", DbType="VarChar(100)")]
		public string TipoDoc
		{
			get
			{
				return this._TipoDoc;
			}
			set
			{
				if ((this._TipoDoc != value))
				{
					this.OnTipoDocChanging(value);
					this.SendPropertyChanging();
					this._TipoDoc = value;
					this.SendPropertyChanged("TipoDoc");
					this.OnTipoDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroDoc", DbType="VarChar(100)")]
		public string NroDoc
		{
			get
			{
				return this._NroDoc;
			}
			set
			{
				if ((this._NroDoc != value))
				{
					this.OnNroDocChanging(value);
					this.SendPropertyChanging();
					this._NroDoc = value;
					this.SendPropertyChanged("NroDoc");
					this.OnNroDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documento_Cliente", Storage="_Cliente", ThisKey="IdDocu", OtherKey="IdDocu")]
		public EntitySet<Cliente> Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				this._Cliente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documento_Egreso", Storage="_Egreso", ThisKey="IdDocu", OtherKey="IdDocu")]
		public EntitySet<Egreso> Egreso
		{
			get
			{
				return this._Egreso;
			}
			set
			{
				this._Egreso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documento_Ingreso", Storage="_Ingreso", ThisKey="IdDocu", OtherKey="IdDocu")]
		public EntitySet<Ingreso> Ingreso
		{
			get
			{
				return this._Ingreso;
			}
			set
			{
				this._Ingreso.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Documento = this;
		}
		
		private void detach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Documento = null;
		}
		
		private void attach_Egreso(Egreso entity)
		{
			this.SendPropertyChanging();
			entity.Documento = this;
		}
		
		private void detach_Egreso(Egreso entity)
		{
			this.SendPropertyChanging();
			entity.Documento = null;
		}
		
		private void attach_Ingreso(Ingreso entity)
		{
			this.SendPropertyChanging();
			entity.Documento = this;
		}
		
		private void detach_Ingreso(Ingreso entity)
		{
			this.SendPropertyChanging();
			entity.Documento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Egreso")]
	public partial class Egreso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEgre;
		
		private System.Nullable<int> _MontoEgre;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<int> _TipoEgre;
		
		private System.Nullable<int> _IdDocu;
		
		private EntitySet<Otro> _Otro;
		
		private EntitySet<Trabajador> _Trabajador;
		
		private EntitySet<Vehiculo> _Vehiculo;
		
		private EntityRef<Documento> _Documento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEgreChanging(int value);
    partial void OnIdEgreChanged();
    partial void OnMontoEgreChanging(System.Nullable<int> value);
    partial void OnMontoEgreChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnTipoEgreChanging(System.Nullable<int> value);
    partial void OnTipoEgreChanged();
    partial void OnIdDocuChanging(System.Nullable<int> value);
    partial void OnIdDocuChanged();
    #endregion
		
		public Egreso()
		{
			this._Otro = new EntitySet<Otro>(new Action<Otro>(this.attach_Otro), new Action<Otro>(this.detach_Otro));
			this._Trabajador = new EntitySet<Trabajador>(new Action<Trabajador>(this.attach_Trabajador), new Action<Trabajador>(this.detach_Trabajador));
			this._Vehiculo = new EntitySet<Vehiculo>(new Action<Vehiculo>(this.attach_Vehiculo), new Action<Vehiculo>(this.detach_Vehiculo));
			this._Documento = default(EntityRef<Documento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEgre", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEgre
		{
			get
			{
				return this._IdEgre;
			}
			set
			{
				if ((this._IdEgre != value))
				{
					this.OnIdEgreChanging(value);
					this.SendPropertyChanging();
					this._IdEgre = value;
					this.SendPropertyChanged("IdEgre");
					this.OnIdEgreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MontoEgre", DbType="Int")]
		public System.Nullable<int> MontoEgre
		{
			get
			{
				return this._MontoEgre;
			}
			set
			{
				if ((this._MontoEgre != value))
				{
					this.OnMontoEgreChanging(value);
					this.SendPropertyChanging();
					this._MontoEgre = value;
					this.SendPropertyChanged("MontoEgre");
					this.OnMontoEgreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoEgre", DbType="Int")]
		public System.Nullable<int> TipoEgre
		{
			get
			{
				return this._TipoEgre;
			}
			set
			{
				if ((this._TipoEgre != value))
				{
					this.OnTipoEgreChanging(value);
					this.SendPropertyChanging();
					this._TipoEgre = value;
					this.SendPropertyChanged("TipoEgre");
					this.OnTipoEgreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDocu", DbType="Int")]
		public System.Nullable<int> IdDocu
		{
			get
			{
				return this._IdDocu;
			}
			set
			{
				if ((this._IdDocu != value))
				{
					if (this._Documento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDocuChanging(value);
					this.SendPropertyChanging();
					this._IdDocu = value;
					this.SendPropertyChanged("IdDocu");
					this.OnIdDocuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Egreso_Otro", Storage="_Otro", ThisKey="IdEgre", OtherKey="IdEgre")]
		public EntitySet<Otro> Otro
		{
			get
			{
				return this._Otro;
			}
			set
			{
				this._Otro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Egreso_Trabajador", Storage="_Trabajador", ThisKey="IdEgre", OtherKey="IdEgre")]
		public EntitySet<Trabajador> Trabajador
		{
			get
			{
				return this._Trabajador;
			}
			set
			{
				this._Trabajador.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Egreso_Vehiculo", Storage="_Vehiculo", ThisKey="IdEgre", OtherKey="IdEgre")]
		public EntitySet<Vehiculo> Vehiculo
		{
			get
			{
				return this._Vehiculo;
			}
			set
			{
				this._Vehiculo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documento_Egreso", Storage="_Documento", ThisKey="IdDocu", OtherKey="IdDocu", IsForeignKey=true)]
		public Documento Documento
		{
			get
			{
				return this._Documento.Entity;
			}
			set
			{
				Documento previousValue = this._Documento.Entity;
				if (((previousValue != value) 
							|| (this._Documento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documento.Entity = null;
						previousValue.Egreso.Remove(this);
					}
					this._Documento.Entity = value;
					if ((value != null))
					{
						value.Egreso.Add(this);
						this._IdDocu = value.IdDocu;
					}
					else
					{
						this._IdDocu = default(Nullable<int>);
					}
					this.SendPropertyChanged("Documento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Otro(Otro entity)
		{
			this.SendPropertyChanging();
			entity.Egreso = this;
		}
		
		private void detach_Otro(Otro entity)
		{
			this.SendPropertyChanging();
			entity.Egreso = null;
		}
		
		private void attach_Trabajador(Trabajador entity)
		{
			this.SendPropertyChanging();
			entity.Egreso = this;
		}
		
		private void detach_Trabajador(Trabajador entity)
		{
			this.SendPropertyChanging();
			entity.Egreso = null;
		}
		
		private void attach_Vehiculo(Vehiculo entity)
		{
			this.SendPropertyChanging();
			entity.Egreso = this;
		}
		
		private void detach_Vehiculo(Vehiculo entity)
		{
			this.SendPropertyChanging();
			entity.Egreso = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ingreso")]
	public partial class Ingreso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdIng;
		
		private System.Nullable<int> _IdCliente;
		
		private string _Motivo;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<int> _MontoIng;
		
		private System.Nullable<int> _IdDocu;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Documento> _Documento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdIngChanging(int value);
    partial void OnIdIngChanged();
    partial void OnIdClienteChanging(System.Nullable<int> value);
    partial void OnIdClienteChanged();
    partial void OnMotivoChanging(string value);
    partial void OnMotivoChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnMontoIngChanging(System.Nullable<int> value);
    partial void OnMontoIngChanged();
    partial void OnIdDocuChanging(System.Nullable<int> value);
    partial void OnIdDocuChanged();
    #endregion
		
		public Ingreso()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._Documento = default(EntityRef<Documento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdIng", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdIng
		{
			get
			{
				return this._IdIng;
			}
			set
			{
				if ((this._IdIng != value))
				{
					this.OnIdIngChanging(value);
					this.SendPropertyChanging();
					this._IdIng = value;
					this.SendPropertyChanged("IdIng");
					this.OnIdIngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="Int")]
		public System.Nullable<int> IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motivo", DbType="VarChar(100)")]
		public string Motivo
		{
			get
			{
				return this._Motivo;
			}
			set
			{
				if ((this._Motivo != value))
				{
					this.OnMotivoChanging(value);
					this.SendPropertyChanging();
					this._Motivo = value;
					this.SendPropertyChanged("Motivo");
					this.OnMotivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MontoIng", DbType="Int")]
		public System.Nullable<int> MontoIng
		{
			get
			{
				return this._MontoIng;
			}
			set
			{
				if ((this._MontoIng != value))
				{
					this.OnMontoIngChanging(value);
					this.SendPropertyChanging();
					this._MontoIng = value;
					this.SendPropertyChanged("MontoIng");
					this.OnMontoIngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDocu", DbType="Int")]
		public System.Nullable<int> IdDocu
		{
			get
			{
				return this._IdDocu;
			}
			set
			{
				if ((this._IdDocu != value))
				{
					if (this._Documento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDocuChanging(value);
					this.SendPropertyChanging();
					this._IdDocu = value;
					this.SendPropertyChanged("IdDocu");
					this.OnIdDocuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Ingreso", Storage="_Cliente", ThisKey="IdCliente", OtherKey="IdCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Ingreso.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Ingreso.Add(this);
						this._IdCliente = value.IdCliente;
					}
					else
					{
						this._IdCliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documento_Ingreso", Storage="_Documento", ThisKey="IdDocu", OtherKey="IdDocu", IsForeignKey=true)]
		public Documento Documento
		{
			get
			{
				return this._Documento.Entity;
			}
			set
			{
				Documento previousValue = this._Documento.Entity;
				if (((previousValue != value) 
							|| (this._Documento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documento.Entity = null;
						previousValue.Ingreso.Remove(this);
					}
					this._Documento.Entity = value;
					if ((value != null))
					{
						value.Ingreso.Add(this);
						this._IdDocu = value.IdDocu;
					}
					else
					{
						this._IdDocu = default(Nullable<int>);
					}
					this.SendPropertyChanged("Documento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Otro")]
	public partial class Otro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdOtro;
		
		private string _Motivo;
		
		private System.Nullable<int> _IdEgre;
		
		private EntityRef<Egreso> _Egreso;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdOtroChanging(int value);
    partial void OnIdOtroChanged();
    partial void OnMotivoChanging(string value);
    partial void OnMotivoChanged();
    partial void OnIdEgreChanging(System.Nullable<int> value);
    partial void OnIdEgreChanged();
    #endregion
		
		public Otro()
		{
			this._Egreso = default(EntityRef<Egreso>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOtro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdOtro
		{
			get
			{
				return this._IdOtro;
			}
			set
			{
				if ((this._IdOtro != value))
				{
					this.OnIdOtroChanging(value);
					this.SendPropertyChanging();
					this._IdOtro = value;
					this.SendPropertyChanged("IdOtro");
					this.OnIdOtroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motivo", DbType="VarChar(100)")]
		public string Motivo
		{
			get
			{
				return this._Motivo;
			}
			set
			{
				if ((this._Motivo != value))
				{
					this.OnMotivoChanging(value);
					this.SendPropertyChanging();
					this._Motivo = value;
					this.SendPropertyChanged("Motivo");
					this.OnMotivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEgre", DbType="Int")]
		public System.Nullable<int> IdEgre
		{
			get
			{
				return this._IdEgre;
			}
			set
			{
				if ((this._IdEgre != value))
				{
					if (this._Egreso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEgreChanging(value);
					this.SendPropertyChanging();
					this._IdEgre = value;
					this.SendPropertyChanged("IdEgre");
					this.OnIdEgreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Egreso_Otro", Storage="_Egreso", ThisKey="IdEgre", OtherKey="IdEgre", IsForeignKey=true)]
		public Egreso Egreso
		{
			get
			{
				return this._Egreso.Entity;
			}
			set
			{
				Egreso previousValue = this._Egreso.Entity;
				if (((previousValue != value) 
							|| (this._Egreso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Egreso.Entity = null;
						previousValue.Otro.Remove(this);
					}
					this._Egreso.Entity = value;
					if ((value != null))
					{
						value.Otro.Add(this);
						this._IdEgre = value.IdEgre;
					}
					else
					{
						this._IdEgre = default(Nullable<int>);
					}
					this.SendPropertyChanged("Egreso");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trabajador")]
	public partial class Trabajador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTrab;
		
		private string _Nombre;
		
		private string _DNI;
		
		private string _NroCuenta;
		
		private string _Cargo;
		
		private System.Nullable<int> _IdEgre;
		
		private EntityRef<Egreso> _Egreso;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTrabChanging(int value);
    partial void OnIdTrabChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDNIChanging(string value);
    partial void OnDNIChanged();
    partial void OnNroCuentaChanging(string value);
    partial void OnNroCuentaChanged();
    partial void OnCargoChanging(string value);
    partial void OnCargoChanged();
    partial void OnIdEgreChanging(System.Nullable<int> value);
    partial void OnIdEgreChanged();
    #endregion
		
		public Trabajador()
		{
			this._Egreso = default(EntityRef<Egreso>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTrab", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTrab
		{
			get
			{
				return this._IdTrab;
			}
			set
			{
				if ((this._IdTrab != value))
				{
					this.OnIdTrabChanging(value);
					this.SendPropertyChanging();
					this._IdTrab = value;
					this.SendPropertyChanged("IdTrab");
					this.OnIdTrabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNI", DbType="VarChar(100)")]
		public string DNI
		{
			get
			{
				return this._DNI;
			}
			set
			{
				if ((this._DNI != value))
				{
					this.OnDNIChanging(value);
					this.SendPropertyChanging();
					this._DNI = value;
					this.SendPropertyChanged("DNI");
					this.OnDNIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroCuenta", DbType="VarChar(100)")]
		public string NroCuenta
		{
			get
			{
				return this._NroCuenta;
			}
			set
			{
				if ((this._NroCuenta != value))
				{
					this.OnNroCuentaChanging(value);
					this.SendPropertyChanging();
					this._NroCuenta = value;
					this.SendPropertyChanged("NroCuenta");
					this.OnNroCuentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cargo", DbType="VarChar(100)")]
		public string Cargo
		{
			get
			{
				return this._Cargo;
			}
			set
			{
				if ((this._Cargo != value))
				{
					this.OnCargoChanging(value);
					this.SendPropertyChanging();
					this._Cargo = value;
					this.SendPropertyChanged("Cargo");
					this.OnCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEgre", DbType="Int")]
		public System.Nullable<int> IdEgre
		{
			get
			{
				return this._IdEgre;
			}
			set
			{
				if ((this._IdEgre != value))
				{
					if (this._Egreso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEgreChanging(value);
					this.SendPropertyChanging();
					this._IdEgre = value;
					this.SendPropertyChanged("IdEgre");
					this.OnIdEgreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Egreso_Trabajador", Storage="_Egreso", ThisKey="IdEgre", OtherKey="IdEgre", IsForeignKey=true)]
		public Egreso Egreso
		{
			get
			{
				return this._Egreso.Entity;
			}
			set
			{
				Egreso previousValue = this._Egreso.Entity;
				if (((previousValue != value) 
							|| (this._Egreso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Egreso.Entity = null;
						previousValue.Trabajador.Remove(this);
					}
					this._Egreso.Entity = value;
					if ((value != null))
					{
						value.Trabajador.Add(this);
						this._IdEgre = value.IdEgre;
					}
					else
					{
						this._IdEgre = default(Nullable<int>);
					}
					this.SendPropertyChanged("Egreso");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUser;
		
		private string _logeo;
		
		private string _contraseña;
		
		private string _NomCompleto;
		
		private System.Nullable<int> _IdCliente;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUserChanging(int value);
    partial void OnIdUserChanged();
    partial void OnlogeoChanging(string value);
    partial void OnlogeoChanged();
    partial void OncontraseñaChanging(string value);
    partial void OncontraseñaChanged();
    partial void OnNomCompletoChanging(string value);
    partial void OnNomCompletoChanged();
    partial void OnIdClienteChanging(System.Nullable<int> value);
    partial void OnIdClienteChanged();
    #endregion
		
		public Usuario()
		{
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logeo", DbType="VarChar(100)")]
		public string logeo
		{
			get
			{
				return this._logeo;
			}
			set
			{
				if ((this._logeo != value))
				{
					this.OnlogeoChanging(value);
					this.SendPropertyChanging();
					this._logeo = value;
					this.SendPropertyChanged("logeo");
					this.OnlogeoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contraseña", DbType="VarChar(100)")]
		public string contraseña
		{
			get
			{
				return this._contraseña;
			}
			set
			{
				if ((this._contraseña != value))
				{
					this.OncontraseñaChanging(value);
					this.SendPropertyChanging();
					this._contraseña = value;
					this.SendPropertyChanged("contraseña");
					this.OncontraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomCompleto", DbType="VarChar(100)")]
		public string NomCompleto
		{
			get
			{
				return this._NomCompleto;
			}
			set
			{
				if ((this._NomCompleto != value))
				{
					this.OnNomCompletoChanging(value);
					this.SendPropertyChanging();
					this._NomCompleto = value;
					this.SendPropertyChanged("NomCompleto");
					this.OnNomCompletoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="Int")]
		public System.Nullable<int> IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Usuario", Storage="_Cliente", ThisKey="IdCliente", OtherKey="IdCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdCliente = value.IdCliente;
					}
					else
					{
						this._IdCliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehiculo")]
	public partial class Vehiculo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdVehic;
		
		private string _Estado;
		
		private string _Modelo;
		
		private string _Placa;
		
		private string _Soat;
		
		private System.Nullable<int> _IdEgre;
		
		private EntityRef<Egreso> _Egreso;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVehicChanging(int value);
    partial void OnIdVehicChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnModeloChanging(string value);
    partial void OnModeloChanged();
    partial void OnPlacaChanging(string value);
    partial void OnPlacaChanged();
    partial void OnSoatChanging(string value);
    partial void OnSoatChanged();
    partial void OnIdEgreChanging(System.Nullable<int> value);
    partial void OnIdEgreChanged();
    #endregion
		
		public Vehiculo()
		{
			this._Egreso = default(EntityRef<Egreso>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVehic", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdVehic
		{
			get
			{
				return this._IdVehic;
			}
			set
			{
				if ((this._IdVehic != value))
				{
					this.OnIdVehicChanging(value);
					this.SendPropertyChanging();
					this._IdVehic = value;
					this.SendPropertyChanged("IdVehic");
					this.OnIdVehicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(100)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modelo", DbType="VarChar(100)")]
		public string Modelo
		{
			get
			{
				return this._Modelo;
			}
			set
			{
				if ((this._Modelo != value))
				{
					this.OnModeloChanging(value);
					this.SendPropertyChanging();
					this._Modelo = value;
					this.SendPropertyChanged("Modelo");
					this.OnModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Placa", DbType="VarChar(100)")]
		public string Placa
		{
			get
			{
				return this._Placa;
			}
			set
			{
				if ((this._Placa != value))
				{
					this.OnPlacaChanging(value);
					this.SendPropertyChanging();
					this._Placa = value;
					this.SendPropertyChanged("Placa");
					this.OnPlacaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soat", DbType="VarChar(100)")]
		public string Soat
		{
			get
			{
				return this._Soat;
			}
			set
			{
				if ((this._Soat != value))
				{
					this.OnSoatChanging(value);
					this.SendPropertyChanging();
					this._Soat = value;
					this.SendPropertyChanged("Soat");
					this.OnSoatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEgre", DbType="Int")]
		public System.Nullable<int> IdEgre
		{
			get
			{
				return this._IdEgre;
			}
			set
			{
				if ((this._IdEgre != value))
				{
					if (this._Egreso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEgreChanging(value);
					this.SendPropertyChanging();
					this._IdEgre = value;
					this.SendPropertyChanged("IdEgre");
					this.OnIdEgreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Egreso_Vehiculo", Storage="_Egreso", ThisKey="IdEgre", OtherKey="IdEgre", IsForeignKey=true)]
		public Egreso Egreso
		{
			get
			{
				return this._Egreso.Entity;
			}
			set
			{
				Egreso previousValue = this._Egreso.Entity;
				if (((previousValue != value) 
							|| (this._Egreso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Egreso.Entity = null;
						previousValue.Vehiculo.Remove(this);
					}
					this._Egreso.Entity = value;
					if ((value != null))
					{
						value.Vehiculo.Add(this);
						this._IdEgre = value.IdEgre;
					}
					else
					{
						this._IdEgre = default(Nullable<int>);
					}
					this.SendPropertyChanged("Egreso");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
